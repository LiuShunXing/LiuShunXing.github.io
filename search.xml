<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Restful 设计规范</title>
      <link href="posts/196e.html"/>
      <url>posts/196e.html</url>
      
        <content type="html"><![CDATA[<h1 id="Restful-API-具体设计规范"><a href="#Restful-API-具体设计规范" class="headerlink" title="Restful API 具体设计规范"></a>Restful API 具体设计规范</h1><p>Restful API 是一种互联网软件架构的设计规范、设计指南、设计风格、设计原则，如何设计一套合理、好用的 API。</p><h2 id="一、协议"><a href="#一、协议" class="headerlink" title="一、协议"></a>一、协议</h2><p>API与用户的通信协议，总是使用<strong>HTTPS协议</strong>。</p><h2 id="二、域名"><a href="#二、域名" class="headerlink" title="二、域名"></a>二、域名</h2><p>应该尽量将API部署在专用域名之下。</p><pre><code>https://api.example.com</code></pre><p>如果确定API很简单，不会有进一步扩展，可以考虑放在主域名下。</p><pre><code>https://example.org/api/</code></pre><h2 id="三、版本（Versioning）"><a href="#三、版本（Versioning）" class="headerlink" title="三、版本（Versioning）"></a>三、版本（Versioning）</h2><p>应该将API的版本号放入URL。</p><pre><code>https://api.example.com/v1/</code></pre><p>另一种做法是，将版本号放在HTTP头信息中，但不如放入URL方便和直观。</p><h2 id="四、路径（Endpoint）"><a href="#四、路径（Endpoint）" class="headerlink" title="四、路径（Endpoint）"></a>四、路径（Endpoint）</h2><p>路径又称”终点”（endpoint），表示API的具体网址。<br>在Restful架构中，每个网址代表一种资源（resource），所以网址中不能有动词，只能有名词，而且所用的名词往往与数据库的表格名对应。</p><p>一般来说，数据库中的表都是同种记录的”集合”（collection），所以API中的名词也应该使用复数。</p><p>举例来说，有一个API提供动物园（zoo）的信息，还包括各种动物和雇员的信息，则它的路径应该设计成下面这样。</p><pre><code>https://api.example.com/v1/zooshttps://api.example.com/v1/animalshttps://api.example.com/v1/employees</code></pre><h2 id="五、HTTP-动词（方法）"><a href="#五、HTTP-动词（方法）" class="headerlink" title="五、HTTP 动词（方法）"></a>五、HTTP 动词（方法）</h2><p>对于资源的具体操作类型，HTTP 动词（方法）表示。<br>常用的 HTTP 动词（方法）有下面五个（括号里是对应的SQL命令）。</p><pre><code>GET（SELECT）：从服务器取出资源（一项或多项）。POST（CREATE）：在服务器新建一个资源。PUT（UPDATE）：在服务器更新资源（客户端提供改变后的完整资源）。PATCH（UPDATE）：在服务器更新资源（客户端提供改变的属性）。DELETE（DELETE）：从服务器删除资源。</code></pre><p>还有两个不常用的HTTP动词。</p><pre><code>HEAD：获取资源的元数据。OPTIONS：获取信息，关于资源的哪些属性是客户端可以改变的。</code></pre><p>举个例子：</p><pre><code>GET  /zoos：列出所有动物园POST /zoos：新建一个动物园GET  /zoos/ID：获取某个指定动物园的信息PUT  /zoos/ID：更新某个指定动物园的信息（提供该动物园的全部信息）PATCH /zoos/ID：更新某个指定动物园的信息（提供该动物园的部分信息）DELETE /zoos/ID：删除某个动物园GET    /zoos/ID/animals：列出某个指定动物园的所有动物DELETE /zoos/ID/animals/ID：删除某个指定动物园的指定动物</code></pre><h2 id="六、过滤信息（Filtering）"><a href="#六、过滤信息（Filtering）" class="headerlink" title="六、过滤信息（Filtering）"></a>六、过滤信息（Filtering）</h2><p>如果记录数量很多，服务器不可能都将它们返回给用户。API应该提供参数，过滤返回结果。</p><p>常见的参数:</p><pre><code>?limit=10：指定返回数据的数量?offset=10：指定返回数据的开始位置(指定一个偏移量)?page=2&amp;per_page=100：指定第几页，以及每页的记录数。?sortby=name&amp;order=asc：指定返回结果按照哪个属性排序，以及排序顺序。?animal_type_id=1：指定筛选条件</code></pre><h2 id="七、状态码（Status-Codes）"><a href="#七、状态码（Status-Codes）" class="headerlink" title="七、状态码（Status Codes）"></a>七、状态码（Status Codes）</h2><p>务器向用户返回的状态码和提示信息</p><blockquote><p>200 OK - [GET]：服务器成功返回用户请求的数据，该操作是幂等的（Idempotent）。<br>201 CREATED - [POST/PUT/PATCH]：用户新建或修改数据成功。<br>202 Accepted - [<em>]：表示一个请求已经进入后台排队（异步任务）<br>204 NO CONTENT - [DELETE]：用户删除数据成功。<br>400 INVALID REQUEST - [POST/PUT/PATCH]：用户发出的请求有错误，服务器没有进行新建或修改数据的操作，该操作是幂等的。<br>401 Unauthorized - [</em>]：表示用户没有权限（令牌、用户名、密码错误）。<br>403 Forbidden - [<em>]： 表示用户得到授权（与401错误相对），但是访问是被禁止的。<br>404 NOT FOUND - [</em>]：用户发出的请求针对的是不存在的记录，服务器没有进行操作，该操作是幂等的。<br>406 Not Acceptable - [GET]：用户请求的格式不可得（比如用户请求JSON格式，但是只有XML格式）。<br>410 Gone -[GET]：用户请求的资源被永久删除，且不会再得到的。<br>422 Unprocesable entity - [POST/PUT/PATCH] 当创建一个对象时，发生一个验证错误。<br>500 INTERNAL SERVER ERROR - [*]：服务器发生错误，用户将无法判断发出的请求是否成功。</p></blockquote><h2 id="八、错误处理（Error-handling）"><a href="#八、错误处理（Error-handling）" class="headerlink" title="八、错误处理（Error handling）"></a>八、错误处理（Error handling）</h2><p>如果状态码是4xx，就应该向用户返回出错信息。一般来说，返回的信息中将error作为键名，出错信息作为键值即可。</p><pre><code>&#123;    error: &quot;Invalid API key&quot;&#125;</code></pre><h2 id="九、返回结果"><a href="#九、返回结果" class="headerlink" title="九、返回结果"></a>九、返回结果</h2><p>针对不同操作，服务器向用户返回的结果应该符合以下规范。</p><blockquote><ul><li>GET /collection：返回资源对象的列表（数组）</li><li>GET /collection/resource：返回单个资源对象</li><li>POST /collection：返回新生成的资源对象，以及有可能会加上是否成功</li><li>PUT /collection/resource：返回修改后的完整的资源对象，以及有可能会加上是否成功</li><li>PATCH /collection/resource：返回更新后的完整的资源对象，以及有可能会加上是否成功</li><li>DELETE /collection/resource：返回一个空文档，以及有可能会加上是否成功</li></ul></blockquote><h2 id="十、Hypermedia-API"><a href="#十、Hypermedia-API" class="headerlink" title="十、Hypermedia API"></a>十、Hypermedia API</h2><p>Restful API最好做到Hypermedia，即返回结果中提供链接，连向其他API方法，使得用户不查文档，也知道下一步应该做什么。</p><p>比如，当用户向api.example.com的根目录发出请求，会得到这样一个文档。</p><pre><code>&#123;&quot;link&quot;: &#123;  &quot;rel&quot;:   &quot;collection https://www.example.com/zoos&quot;,  &quot;href&quot;:  &quot;https://api.example.com/zoos&quot;,  &quot;title&quot;: &quot;List of zoos&quot;,  &quot;type&quot;:  &quot;application/vnd.yourformat+json&quot;&#125;&#125;</code></pre><p>上面代码表示，文档中有一个link属性，用户读取这个属性就知道下一步该调用什么API了。rel表示这个API与当前网址的关系（collection关系，并给出该collection的网址），href表示API的路径，title表示API的标题，type表示返回类型。</p><p>Hypermedia API的设计被称为HATEOAS。Github的API就是这种设计，访问api.github.com会得到一个所有可用API的网址列表。</p><pre><code>&#123;  &quot;current_user_url&quot;: &quot;https://api.github.com/user&quot;,  &quot;authorizations_url&quot;: &quot;https://api.github.com/authorizations&quot;,  // ...&#125;</code></pre><p>从上面可以看到，如果想获取当前用户的信息，应该去访问api.github.com/user，然后就得到了下面结果。</p><pre><code>&#123;  &quot;message&quot;: &quot;Requires authentication&quot;,  &quot;documentation_url&quot;: &quot;https://developer.github.com/v3&quot;&#125;</code></pre><p>上面代码表示，服务器给出了提示信息，以及文档的网址。</p><h2 id="十一、其他"><a href="#十一、其他" class="headerlink" title="十一、其他"></a>十一、其他</h2><ul><li>API的身份认证应该使用OAuth 2.0框架。</li><li>服务器返回的数据格式，应该尽量使用JSON，避免使用XML。</li></ul><p>原文 <a href="http://www.ruanyifeng.com/blog/2014/05/restful_api.html," title="RESTful API 设计指南">阮一峰</a></p>]]></content>
      
      
      <categories>
          
          <category> Restful API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Restful 设计规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Restful 架构</title>
      <link href="posts/57aa.html"/>
      <url>posts/57aa.html</url>
      
        <content type="html"><![CDATA[<h1 id="Restful-架构"><a href="#Restful-架构" class="headerlink" title="Restful 架构"></a>Restful 架构</h1><h2 id="一、起源"><a href="#一、起源" class="headerlink" title="一、起源"></a>一、起源</h2><p>REST 这个词，是 Roy Thomas Fielding (大牛) 在他2000年的博士论文中提出的。</p><h2 id="二、名称"><a href="#二、名称" class="headerlink" title="二、名称"></a>二、名称</h2><p>Fielding将他对互联网软件的架构原则，定名为 REST，即<strong>Representational State Transfer</strong>(表现层状态转化)。</p><p>如果一个架构符合REST原则，就称它为 Restful架构。</p><h2 id="三、资源（Resources）"><a href="#三、资源（Resources）" class="headerlink" title="三、资源（Resources）"></a>三、资源（Resources）</h2><p>REST中”表现层”其实指的是”资源”（Resources）的”表现层”。</p><p><strong>所谓”资源”，就是网络上的一个实体，或者说是网络上的一个具体信息</strong>。它可以是一段文本、一张图片、一首歌曲、一种服务，总之就是一个具体的实在。</p><blockquote><p>URI:统一资源标识符。是一个字符串。用来标识互联网资源的名称<br>URL:统一资源定位符。它是一种具体的URI</p></blockquote><p>可以用一个URI指向它，每种资源对应一个特定的URI。要获取这个资源，访问它的URI就可以，因此URI就成了每一个资源的地址或独一无二的识别符。</p><p>所谓”上网”，就是与互联网上一系列的”资源”互动，调用它的URI。</p><h2 id="四、表现层（Representation）"><a href="#四、表现层（Representation）" class="headerlink" title="四、表现层（Representation）"></a>四、表现层（Representation）</h2><p>“资源”是一种信息实体，它可以有多种外在表现形式。<strong>我们把”资源”具体呈现出来的形式，叫做它的”表现层”（Representation）</strong>。</p><p>比如，文本可以用txt格式表现，也可以用HTML格式、XML格式、JSON格式表现，甚至可以采用二进制格式；图片可以用JPG格式表现，也可以用PNG格式表现。</p><p>URI只代表资源的实体，不代表它的形式。严格地说，有些网址最后的”.html”后缀名是不必要的，因为这个后缀名表示格式，属于”表现层”范畴，而URI应该只代表”资源”的位置。它的具体表现形式，应该在HTTP请求的头信息中用<strong>Accept</strong>和<strong>Content-Type</strong>字段指定，这两个字段才是对”表现层”的描述。</p><h2 id="五、状态转化（State-Transfer）"><a href="#五、状态转化（State-Transfer）" class="headerlink" title="五、状态转化（State Transfer）"></a>五、状态转化（State Transfer）</h2><p>访问一个网站，就代表了客户端和服务器的一个互动过程。在这个过程中，势必涉及到数据和状态的变化。</p><p>互联网通信协议HTTP协议，是一个无状态协议。这意味着，所有的状态都保存在服务器端。因此，**如果客户端想要操作服务器，必须通过某种手段，让服务器端发生”状态转化”（State Transfer）。而这种转化是建立在表现层之上的，所以就是”表现层状态转化”**。</p><p>客户端用到的手段，只能是HTTP协议。具体来说，就是HTTP协议里面，四个表示操作方式的动词：<strong>GET、POST、PUT、DELETE</strong>。它们分别对应四种基本操作：<strong>GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源</strong>。</p><h2 id="六、综述"><a href="#六、综述" class="headerlink" title="六、综述"></a>六、综述</h2><p>总结一下什么是Restful架构：</p><ul><li>每一个URI代表一种资源；</li><li>客户端和服务器之间，传递这种资源的某种表现层；</li><li>客户端通过四个HTTP动词，对服务器端资源进行操作，实现”表现层状态转化”。</li></ul><h2 id="七、设计误区"><a href="#七、设计误区" class="headerlink" title="七、设计误区"></a>七、设计误区</h2><p><strong>最常见的一种设计错误，就是URI包含动词</strong>。因为”资源”表示一种实体，所以应该是名词，URI不应该有动词，动词应该放在HTTP协议中。</p><p>举例来说，某个URI是<code>/posts/show/1</code>，其中show是动词，这个URI就设计错了，正确的写法应该是<code>/posts/1</code>，然后用GET方法表示show。</p><p>如果某些动作是HTTP动词表示不了的，你就应该把动作做成一种资源。比如网上汇款，从账户1向账户2汇款500元，错误的URI是：</p><pre><code>POST /accounts/1/transfer/500/to/2</code></pre><p>正确的写法是把动词transfer改成名词transaction，资源不能是动词，但是可以是一种服务：</p><pre><code>POST /transaction HTTP/1.1Host: 127.0.0.1from=1&amp;to=2&amp;amount=500.00</code></pre><p>原文 <a href="http://www.ruanyifeng.com/blog/2011/09/restful.html," title="理解RESTful架构">阮一峰</a></p>]]></content>
      
      
      <categories>
          
          <category> Restful API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Restful 架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>粘连布局</title>
      <link href="posts/8ccc.html"/>
      <url>posts/8ccc.html</url>
      
        <content type="html"><![CDATA[<h1 id="粘连布局"><a href="#粘连布局" class="headerlink" title="粘连布局"></a>粘连布局</h1><p>通俗的讲：如果有足够的内容将页面撑开，footer 可以被撑到网页下方去。但是，如果页面的内容很短，粘连 footer 仍然会出现在浏览器窗口的底部。</p><h2 id="footer高度固定"><a href="#footer高度固定" class="headerlink" title="footer高度固定"></a>footer高度固定</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>内容区域<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><pre class="line-numbers language-CSS"><code class="language-CSS">html, body &#123;    height: 100%;&#125;.main &#123;     min-height: 100%;     margin-bottom: -100px;     padding-bottom: 100px;     box-sizing: border-box;&#125; .footer &#123;     height: 100px;     background: yellow;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><pre class="line-numbers language-CSS"><code class="language-CSS">html, body &#123;    height: 100%;&#125;.main &#123;    min-height: 100%;    padding-bottom: 100px;    box-sizing: border-box;&#125;.footer &#123;    height: 100px;    margin-top: -100px;    background: yellow;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><pre class="line-numbers language-CSS"><code class="language-CSS">html,body &#123;    height: 100%;&#125;.main &#123;    min-height: calc(100vh - 100px);&#125; .footer &#123;    height: 100px;    background: yellow;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上只限于底部高度固定情况。flex 弹性盒子解决所有情况。</p><h2 id="flex-弹性盒子"><a href="#flex-弹性盒子" class="headerlink" title="flex 弹性盒子"></a>flex 弹性盒子</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>内容区域<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-CSS"><code class="language-CSS">html &#123;    height: 100%;&#125;body &#123;    min-height: 100%;    display: flex;    flex-direction: column;&#125;.header&#123;    height: 100px;&#125;.main &#123;    flex: 1;&#125;.footer &#123;    background: yellow;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 布局方案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三栏布局</title>
      <link href="posts/2db5.html"/>
      <url>posts/2db5.html</url>
      
        <content type="html"><![CDATA[<h1 id="三栏布局"><a href="#三栏布局" class="headerlink" title="三栏布局"></a>三栏布局</h1><p>特征：中间列自适应宽度，旁边两侧固定宽度。</p><h2 id="一、浮动或绝对定位"><a href="#一、浮动或绝对定位" class="headerlink" title="一、浮动或绝对定位"></a>一、浮动或绝对定位</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-CSS"><code class="language-CSS">/* 左右两边分别浮动或定位，中间部分设置margin: 0 右边宽度 0 左边宽度 */<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="二、flex-弹性盒子或者-grid-网格布局"><a href="#二、flex-弹性盒子或者-grid-网格布局" class="headerlink" title="二、flex 弹性盒子或者 grid 网格布局"></a>二、flex 弹性盒子或者 grid 网格布局</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>左边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>中间<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>右边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-CSS"><code class="language-CSS">.wrapper &#123;    display: flex;&#125;.center &#123;    flex: 1;    height: 500px;    background: yellow;.left &#123;    width: 200px;    height: 500px;    background: red;&#125;.right &#123;    width: 300px;    height: 500px;    background: blue;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="圣杯布局"><a href="#圣杯布局" class="headerlink" title="圣杯布局"></a>圣杯布局</h2><p>和常规三栏布局相似，唯一区别是dom结构必须是先写中间列部分，这样实现中间列可以优先加载。</p><blockquote><p>实现步骤:</p><ol><li>三个部分都设为左浮动，然后设置center的宽度为100%(实现中间列内容自适应)，此时，left和right部分会跳到下一行。</li><li>通过设置margin-left为负值让left和right部分回到与center部分同一行。</li><li>通过设置父容器的padding-left和padding-right，让左右两边留出间隙。</li><li>通过设置相对定位，让left和right部分移动到两边。</li></ol></blockquote><pre class="line-numbers language-html"><code class="language-html">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>圣杯布局<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-CSS"><code class="language-CSS">.wrapper &#123;    padding-left: 200px;    padding-right: 300px;&#125;.center &#123;    float: left;    width: 100%;    height: 500px;    background: yellow;&#125;.left &#123;    float: left;    width: 200px;    height: 400px;    background: red;    margin-left: -100%;    position: relative;    left: -200px;&#125;.right &#123;    float: left;    width: 300px;    height: 400px;    background: blue;    margin-left: -300px;    position: relative;    right: -300px;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>center部分的最小宽度不能小于left部分的宽度，否则会left部分掉到下一行。<br>如果其中一列内容高度较高，其他两列的背景并不会自动填充。</p></blockquote><h2 id="双飞翼布局"><a href="#双飞翼布局" class="headerlink" title="双飞翼布局"></a>双飞翼布局</h2><p>同样也是三栏布局，在圣杯布局基础上进一步优化，解决了圣杯布局错乱问题，实现了内容与布局的分离。而且任何一栏都可以是最高栏，不会出问题。</p><blockquote><p>实现步骤：</p><ol><li>三个部分都设定为左浮动，然后设置center的宽度为100%，此时，left和right部分会跳到下一行；</li><li>通过设置margin-left为负值让left和right部分回到与center部分同一行；</li><li>center部分增加一个内层div，并设margin: 0 右边宽度 0 左边宽度。</li></ol></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>中间部分内容区域<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>左边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>右边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-CSS"><code class="language-CSS">.center &#123;    float: left;    width: 100%;    height: 500px;    background: yellow;.left &#123;    float: left;    width: 200px;    height: 500px;    background: red;    margin-left: -100%;.right &#123;    float: left;    width: 300px;    height: 500px;    background: blue;    margin-left: -300px;.inner &#123;    margin: 0 300px 0 200px; /* 300px 为右边的宽度，200px为左边的宽度 */&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="圣杯和双飞翼布局对比"><a href="#圣杯和双飞翼布局对比" class="headerlink" title="圣杯和双飞翼布局对比"></a>圣杯和双飞翼布局对比</h2><ol><li>两种布局方式都是把主列放在文档流最前，是主列优先加载。</li><li>实现上都是让三列浮动，然后通过负外边距形成三列布局。</li><li>不同在于如何处理中间主列的位置：</li><li>圣杯布局利用父容器的左、右内边距 + 两个边列相对定位。</li><li>双飞翼布局把主列嵌套在一个新的父级中利用主列的左、右外边距进行布局调整。</li></ol>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 布局方案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两栏布局</title>
      <link href="posts/bd25.html"/>
      <url>posts/bd25.html</url>
      
        <content type="html"><![CDATA[<h1 id="两栏布局"><a href="#两栏布局" class="headerlink" title="两栏布局"></a>两栏布局</h1><p>一栏固定宽度(或由内容撑开)，一栏自适应(假设左边固定，右边自适应)。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>左侧固定内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>右侧内容自适应<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一、浮动-float"><a href="#一、浮动-float" class="headerlink" title="一、浮动 float"></a>一、浮动 float</h2><pre class="line-numbers language-CSS"><code class="language-CSS">/* 左侧float:left;右侧margin-left */.left &#123;    float: left;    width: 200px;    height: 200px;    background-color: skyblue;&#125;.right &#123;    height: 200px;    margin-left: 200px;    background-color: greenyellow;&#125;/* 左侧float:left;右侧overflow:hidden; */.right &#123;    height: 200px;    /* overflow:hidden触发BFC,不会重叠浮动元素 */    overflow:hidden;    background-color: greenyellow;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、绝对定位-position-absolute"><a href="#二、绝对定位-position-absolute" class="headerlink" title="二、绝对定位 position: absolute"></a>二、绝对定位 position: absolute</h2><pre class="line-numbers language-CSS"><code class="language-CSS">.left &#123;    position: absolute;    left: 0;    top: 0;    width: 200px;    height: 200px;    background-color: skyblue;&#125;/* .right 同方法1 */<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、弹性布局-display-flex"><a href="#三、弹性布局-display-flex" class="headerlink" title="三、弹性布局 display:flex;"></a>三、弹性布局 display:flex;</h2><pre class="line-numbers language-CSS"><code class="language-CSS">.wrapper&#123;    display: flex;&#125;.left &#123;    width: 200px;    height: 200px;    background-color: skyblue;&#125;.right &#123;    flex: 1;    height: 200px;    background-color: greenyellow;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、网格布局-display-grid"><a href="#四、网格布局-display-grid" class="headerlink" title="四、网格布局 display:grid"></a>四、网格布局 display:grid</h2><p>网格布局（Grid）是最强大的 CSS 布局方案。它将网页划分成一个个网格，可以任意组合不同的网格，做出各种各样的布局。</p><pre class="line-numbers language-CSS"><code class="language-CSS">.wrapper&#123;    display:grid;    grid-template-columns:200px 1fr;&#125;.left &#123;    height: 200px;    background-color: skyblue;&#125;.right &#123;    height: 200px;    background-color: greenyellow;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 布局方案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="posts/46d5.html"/>
      <url>posts/46d5.html</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a>Markdown基本语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><pre class="line-numbers language-txt"><code class="language-txt"># 这是一级标题## 这是二级标题### 这是三级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><pre class="line-numbers language-txt"><code class="language-txt">在文章开始地方输入[toc]，即可在对应位置插入目录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><pre class="line-numbers language-txt"><code class="language-txt">斜体：左右用一个*号包起来加粗：左右用两个*号包起来斜体加粗：左右用三个*号包起来删除线：左右用两个~~号包起来<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><em>斜体</em><br><strong>加粗</strong><br><strong><em>斜体加粗</em></strong><br><del>删除线</del></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;或三个&gt;&gt;&gt;，以此类推。</p><pre class="line-numbers language-txt"><code class="language-txt">>这是引用的内容>>这是引用的内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p></blockquote></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>三个或者三个以上的 - 或者 * 。</p><pre class="line-numbers language-txt"><code class="language-txt">-------********<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><hr><hr><hr><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><pre class="line-numbers language-txt"><code class="language-txt">![图片alt](图片地址 "图片title")图片alt是图片的名称，相当于对图片内容的解释。图片title是图片的标题，当鼠标移到图片上时显示的内容。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://www.baidu.com/img/flexible/logo/pc/privacy.gif" alt="百度logo" title="百度"></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><pre class="line-numbers language-txt"><code class="language-txt">[超链接名](超链接地址 "超链接title")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="http://baidu.com,/" title="百度">百度</a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>无序列表用 - + * 任何一种都可以；有序列表用数字加点。</p><ul><li>无序列表</li></ul><ol><li>有序列表</li></ol><h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3><p>下一级开头加两个空格</p><pre class="line-numbers language-txt"><code class="language-txt">- 一级  - 二级- 一级  1. 二级<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>一级<ul><li>二级</li></ul></li><li>一级<ol><li>二级</li></ol></li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><pre class="line-numbers language-txt"><code class="language-txt">表头|表头|表头---|:--:|---:内容|内容|内容内容|内容|内容第二行分割表头和内容。- 有一个就行，为了对齐，多加了几个文字默认居左-两边加：表示文字居中-右边加：表示文字居右<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>姓名</th><th align="center">技能</th><th>排行</th></tr></thead><tbody><tr><td>刘备</td><td align="center">哭</td><td>大哥</td></tr><tr><td>关羽</td><td align="center">打</td><td>二哥</td></tr><tr><td>张飞</td><td align="center">骂</td><td>三弟</td></tr></tbody></table><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-txt"><code class="language-txt">单行代码: `代码内容`代码块：代码之间分别用三个反引号包起来<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>function</code></p><pre class="line-numbers language-JavaScript"><code class="language-JavaScript">function fn()&#123;  console.log(1);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hello world</title>
      <link href="posts/f82e.html"/>
      <url>posts/f82e.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
